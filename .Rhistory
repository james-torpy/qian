project <- "qian"
expName <- "exp1"
# define directories:
#homeDir <- "/share/ScratchGeneral/jamtor/"
homeDir <- "/Users/jamestorpy/clusterHome"
projectDir <- paste0(homeDir, "/projects/",
project, "/")
resultsDir <- paste0(projectDir, "/results/", expName, "/")
RobjectDir <- paste0(projectDir, "/Robjects/",
expName, "/")
inDir <- paste0(resultsDir, "/htseq/")
rawDir <- paste0(projectDir,
"/raw_files/", expName, "/fastq/")
starGC_dir <- paste0(resultsDir, "/star/GC/")
starRibo_dir <- paste0(resultsDir, "/star/ribo/",
expName)
system(paste0("mkdir -p ", RobjectDir))
### 1. Check for and discard bad inputs ###
# fetch counts file ids:
compFiles <- as.character(read.table(paste0(inDir,
"/completed_files.txt"))[,1])
# fetch counts file ids:
compFiles <- list.files(inDir)
test = "a"
# write function to ensure all htseq output files have same number of lines:
file_check <- function(type) {
in_files <- list.files(inDir, pattern = type)
good_files <- c()
bad_files <- c()
for ( i in 1:length(in_files) ) {
if (i==1) {
line_no <<- system(paste0("wc -l ", in_files[i]))
print(paste0(in_files[i], " has ", line_no, "lines"))
append(in_files[i], good_files)
} else {
current_no <- system(paste0("wc -l ", in_files[i]))
if (current_no == line_no) {
print(paste0(in_files[i], " has the same number of lines as first htseq output file ",
in_files[1]))
append(in_files[i], good_files)
} else {
print(paste0(in_files[i], " has a different number of lines as first htseq output file ",
in_files[1]))
append(in_files[i], bad_files)
}
}
}
res <- list(good_files, bad_files)
names(res) <- c("good_files", "bad_files")
}
